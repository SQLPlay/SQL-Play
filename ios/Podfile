require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

platform :ios, '13.0'

target 'SQL_PlayGround' do
  config = use_native_modules!

  use_react_native!(
                    :path => config["reactNativePath"],
                    :hermes_enabled => true
                   )

  target 'SQL_PlayGroundTests' do
    pod 'Google-Mobile-Ads-SDK', '~> 7.69.0'
    inherit! :complete
    # Pods for testing
  end

  # pod 'MaterialShowcase',:git => 'https://github.com/prscX/material-showcase-ios', :branch => 'swift-version-fix'
  

  # Enables Flipper.
  #
  # Note that if you have use_frameworks! enabled, Flipper will not work and
  # you should disable these next few lines.
  # use_flipper!
  # post_install do |installer|
  #   flipper_post_install(installer)
  # end
end


use_flipper!({ 'Flipper-Folly' => '2.5.3', 'Flipper' => '0.87.0', 'Flipper-RSocket' => '1.3.1' })

# Define find-and-replace function
  def find_and_replace(dir, findstr, replacestr)
    Dir[dir].each do |name|
        text = File.read(name)
        replace = text.gsub(findstr,replacestr)
        replaced = text.index(replacestr)
        if replaced == nil && text != replace
            puts "Fix: " + name
            File.open(name, "w") { |file| file.puts replace }
            STDOUT.flush
        end
    end
    Dir[dir + '*/'].each(&method(:find_and_replace))
  end

  post_install do |installer|
    react_native_post_install(installer)
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64'
        end
    end
    
#    Fix for Flipper-Folly on iOS 14.5
#    These are no longer required as Flipper-folly is updated
#   find_and_replace("Pods/Flipper-Folly/folly/synchronization/DistributedMutex-inl.h",
#                    "atomic_notify_one(state)", "folly::atomic_notify_one(state)")

#   find_and_replace("Pods/Flipper-Folly/folly/synchronization/DistributedMutex-inl.h",
#   "atomic_wait_until(&state, previous | data, deadline)", "folly::atomic_wait_until(&state, previous | data, deadline)")

  find_and_replace("Pods/RCT-Folly/folly/synchronization/DistributedMutex-inl.h",
                   "atomic_notify_one(state)", "folly::atomic_notify_one(state)")

  find_and_replace("Pods/RCT-Folly/folly/synchronization/DistributedMutex-inl.h",
  "atomic_wait_until(&state, previous | data, deadline)", "folly::atomic_wait_until(&state, previous | data, deadline)")

    
  end
